//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;

namespace NHibernate.Envers.Tests.Integration.AccessType
{
	using System.Threading.Tasks;
	public partial class ImmutableClassAccessTest : TestBase
	{

		[Test]
		public async Task VerifyRevisionCountAsync()
		{
			CollectionAssert.AreEquivalent(new[] { 1 }, await (AuditReader().GetRevisionsAsync(typeof(Country), country.Code)).ConfigureAwait(false));
		}

		[Test]
		public async Task VerifyHistoryAsync()
		{
			var country1 = await (Session.GetAsync<Country>(country.Code)).ConfigureAwait(false);
			Assert.AreEqual(country, country1);

			var history = await (AuditReader().FindAsync<Country>(country1.Code, 1)).ConfigureAwait(false);
			Assert.AreEqual(country, history);
		}
	}
}