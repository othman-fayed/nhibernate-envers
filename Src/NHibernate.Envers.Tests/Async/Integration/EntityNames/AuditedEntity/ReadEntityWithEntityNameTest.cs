//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;
using SharpTestsEx;

namespace NHibernate.Envers.Tests.Integration.EntityNames.AuditedEntity
{
	using System.Threading.Tasks;
	public partial class ReadEntityWithEntityNameTest : TestBase
	{

		[Test]
		public async Task ShouldRetrieveRevisionsWithEntityNameAsync()
		{
			var pers1Revs = await (AuditReader().GetRevisionsAsync("Personaje", id_pers1)).ConfigureAwait(false);
			var pers2Revs = await (AuditReader().GetRevisionsAsync("Personaje", id_pers2)).ConfigureAwait(false);
			var pers3Revs = await (AuditReader().GetRevisionsAsync("Personaje", id_pers3)).ConfigureAwait(false);

			pers1Revs.Should().Have.Count.EqualTo(3);
			pers2Revs.Should().Have.Count.EqualTo(2);
			pers3Revs.Should().Have.Count.EqualTo(1);
		}

		[Test]
		public async Task ShouldRetrieveAuditedEntityWithEntityNameAsync()
		{
			(await (AuditReader().FindAsync("Personaje", id_pers1, 1)).ConfigureAwait(false)).Should().Not.Be.Null();
			(await (AuditReader().FindAsync("Personaje", id_pers1, 2)).ConfigureAwait(false)).Should().Not.Be.Null();
			(await (AuditReader().FindAsync("Personaje", id_pers1, 3)).ConfigureAwait(false)).Should().Not.Be.Null();
		}

		[Test]
		public async Task ShouldObtainEntityNameAuditedEntityWithEntityNameAsync()
		{
			var person1_1 = await (AuditReader().FindAsync("Personaje", id_pers1, 1)).ConfigureAwait(false);
			var person1_2 = await (AuditReader().FindAsync("Personaje", id_pers1, 2)).ConfigureAwait(false);
			var person1_3 = await (AuditReader().FindAsync("Personaje", id_pers1, 3)).ConfigureAwait(false);

			var person1EN = AuditReader().GetEntityName(id_pers1, 1, person1_1);
			var person2EN = AuditReader().GetEntityName(id_pers1, 2, person1_2);
			var person3EN = AuditReader().GetEntityName(id_pers1, 3, person1_3);

			person1EN.Should().Be.EqualTo("Personaje");
			person2EN.Should().Be.EqualTo("Personaje");
			person3EN.Should().Be.EqualTo("Personaje");
		}

		[Test]
		public async Task ShouldRetrieveAuditedEntityWithEntityNameWithNewSessionAsync()
		{
			ForceNewSession();

			(await (AuditReader().FindAsync("Personaje", id_pers1, 1)).ConfigureAwait(false)).Should().Not.Be.Null();
			(await (AuditReader().FindAsync("Personaje", id_pers1, 2)).ConfigureAwait(false)).Should().Not.Be.Null();
			(await (AuditReader().FindAsync("Personaje", id_pers1, 3)).ConfigureAwait(false)).Should().Not.Be.Null();
		}
	}
}