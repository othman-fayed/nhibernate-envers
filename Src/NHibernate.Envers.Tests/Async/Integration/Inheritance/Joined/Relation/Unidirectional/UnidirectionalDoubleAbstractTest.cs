//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;

namespace NHibernate.Envers.Tests.Integration.Inheritance.Joined.Relation.Unidirectional
{
	using System.Threading.Tasks;
	public partial class UnidirectionalDoubleAbstractTest : TestBase
	{

		[Test]
		public async Task VerifyRevisionCountAsync()
		{
			CollectionAssert.AreEquivalent(new[] { 1 }, await (AuditReader().GetRevisionsAsync(typeof(ContainedEntity), cce1_id)).ConfigureAwait(false));
			CollectionAssert.AreEquivalent(new[] { 1 }, await (AuditReader().GetRevisionsAsync(typeof(SetEntity), cse1_id)).ConfigureAwait(false));
		}

		[Test]
		public async Task VerifyHistoryOfReferencedCollectionAsync()
		{
			var cce1 = await (Session.GetAsync<ContainedEntity>(cce1_id)).ConfigureAwait(false);
			var entities = (await (AuditReader().FindAsync<SetEntity>(cse1_id, 1)).ConfigureAwait(false)).Entities;
			Assert.AreEqual(1, entities.Count);
			CollectionAssert.Contains(entities, cce1);
		}
	}
}