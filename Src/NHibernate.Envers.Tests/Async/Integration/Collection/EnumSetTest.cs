//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Envers.Tests.Entities.Collection;
using NUnit.Framework;

namespace NHibernate.Envers.Tests.Integration.Collection
{
	using System.Threading.Tasks;
	public partial class EnumSetTest : TestBase
	{

		[Test]
		public async Task VerifyRevisionCountAsync()
		{
			CollectionAssert.AreEquivalent(new[] { 1, 2, 3 }, await (AuditReader().GetRevisionsAsync(typeof(EnumSetEntity), sse1_id)).ConfigureAwait(false));
		}

		[Test]
		public async Task VerifyHistoryOfAsync()
		{
			var rev1 = await (AuditReader().FindAsync<EnumSetEntity>(sse1_id, 1)).ConfigureAwait(false);
			var rev2 = await (AuditReader().FindAsync<EnumSetEntity>(sse1_id, 2)).ConfigureAwait(false);
			var rev3 = await (AuditReader().FindAsync<EnumSetEntity>(sse1_id, 3)).ConfigureAwait(false);

			CollectionAssert.AreEquivalent(new[] { E1.X }, rev1.Enums1);
			CollectionAssert.AreEquivalent(new[] { E1.X, E1.Y }, rev2.Enums1);
			CollectionAssert.AreEquivalent(new[] { E1.Y }, rev3.Enums1);

			CollectionAssert.AreEquivalent(new[] { E2.A }, rev1.Enums2);
			CollectionAssert.AreEquivalent(new[] { E2.A }, rev2.Enums2);
			CollectionAssert.AreEquivalent(new[] { E2.A }, rev3.Enums2);
		}
	}
}