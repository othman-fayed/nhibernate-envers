//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Envers.Query;
using NHibernate.Envers.Tests.Integration.AuditReader;
using NUnit.Framework;
using SharpTestsEx;

namespace NHibernate.Envers.Tests.Integration.ModifiedFlags
{
	using System.Threading.Tasks;
	public partial class HasChangedAPITest : AbstractModifiedFlagsEntityTest
	{

		[Test]
		public async Task VerifyHasChangedCriteriaAsync()
		{
			var list = await (AuditReader().CreateQuery().ForRevisionsOfEntity(typeof (AuditedTestEntity), true, true)
				.Add(AuditEntity.Property("Data").HasChanged()).GetResultListAsync<AuditedTestEntity>()).ConfigureAwait(false);
			list.Should().Have.Count.EqualTo(2);
			list[0].Data.Should().Be.EqualTo("str1");
			list[1].Data.Should().Be.EqualTo("str2");
		}

		[Test]
		public async Task VerifyHasNotChangedCriteriaAsync()
		{
			var list = await (AuditReader().CreateQuery().ForRevisionsOfEntity(typeof (AuditedTestEntity), true, true)
				.Add(AuditEntity.Property("Data").HasNotChanged()).GetResultListAsync<AuditedTestEntity>()).ConfigureAwait(false);
			list.Should().Be.Empty();
		}
	}
}