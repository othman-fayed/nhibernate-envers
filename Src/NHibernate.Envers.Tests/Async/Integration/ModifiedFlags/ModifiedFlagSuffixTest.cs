//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Cfg;
using NHibernate.Envers.Configuration;
using NHibernate.Envers.Query;
using NHibernate.Envers.Tests.Integration.Basic;
using NHibernate.Envers.Tests.Tools;
using NUnit.Framework;
using SharpTestsEx;

namespace NHibernate.Envers.Tests.Integration.ModifiedFlags
{
	using System.Threading.Tasks;
	public partial class ModifiedFlagSuffixTest : AbstractModifiedFlagsEntityTest
	{

		[Test]
		public async Task VerifyHasChangedAsync()
		{
			(await (QueryForPropertyHasChangedWithDeletedAsync(typeof (BasicTestEntity1), id, "Str1")).ConfigureAwait(false))
				.ExtractRevisionNumbersFromRevision()
				.Should().Have.SameSequenceAs(1);
			(await (QueryForPropertyHasChangedWithDeletedAsync(typeof(BasicTestEntity1), id, "Long1")).ConfigureAwait(false))
				.ExtractRevisionNumbersFromRevision()
				.Should().Have.SameSequenceAs(1);
			(await (AuditReader().CreateQuery().ForRevisionsOfEntity(typeof (BasicTestEntity1), false, true)
				.Add(AuditEntity.Property("Str1").HasChanged())
				.Add(AuditEntity.Property("Long1").HasChanged())
				.GetResultListAsync()).ConfigureAwait(false))
				.ExtractRevisionNumbersFromRevision()
				.Should().Have.SameSequenceAs(1);
		}
	}
}