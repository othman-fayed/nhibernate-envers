//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Envers.Tests.Entities.Components;
using NHibernate.Envers.Tests.Tools;
using NUnit.Framework;
using SharpTestsEx;

namespace NHibernate.Envers.Tests.Integration.ModifiedFlags
{
	using System.Threading.Tasks;
	public partial class HasChangedComponentsTest : AbstractModifiedFlagsEntityTest
	{

		[Test]
		public void VerifyHasChangedNotAuditedAsync()
		{
			Assert.ThrowsAsync<QueryException>(() =>
			                              QueryForPropertyHasChangedAsync(typeof (ComponentTestEntity), id1, "Comp2")
				);
		}

		[Test]
		public async Task VerifyHasChangedId1Async()
		{
			(await (QueryForPropertyHasChangedAsync(typeof (ComponentTestEntity), id1, "Comp1")).ConfigureAwait(false))
				.ExtractRevisionNumbersFromRevision()
				.Should().Have.SameSequenceAs(1, 2);

			(await (QueryForPropertyHasNotChangedAsync(typeof(ComponentTestEntity), id1, "Comp1")).ConfigureAwait(false))
				.ExtractRevisionNumbersFromRevision()
				.Should().Be.Empty();
		}

		[Test]
		public async Task VerifyHasChangedId2Async()
		{
			(await (QueryForPropertyHasChangedWithDeletedAsync(typeof(ComponentTestEntity), id2, "Comp1")).ConfigureAwait(false))
				.ExtractRevisionNumbersFromRevision()
				.Should().Have.SameSequenceAs(1, 2, 4);

			(await (QueryForPropertyHasNotChangedWithDeletedAsync(typeof(ComponentTestEntity), id2, "Comp1")).ConfigureAwait(false))
				.ExtractRevisionNumbersFromRevision()
				.Should().Be.Empty();
		}

		[Test]
		public async Task VerifyHasChangedId3Async()
		{
			(await (QueryForPropertyHasChangedWithDeletedAsync(typeof(ComponentTestEntity), id3, "Comp1")).ConfigureAwait(false))
				.ExtractRevisionNumbersFromRevision()
				.Should().Have.SameSequenceAs(1, 3);

			(await (QueryForPropertyHasNotChangedWithDeletedAsync(typeof(ComponentTestEntity), id3, "Comp1")).ConfigureAwait(false))
				.ExtractRevisionNumbersFromRevision()
				.Should().Be.Empty();
		}

		[Test]
		public async Task VerifyHasChangedId4Async()
		{
			(await (QueryForPropertyHasChangedWithDeletedAsync(typeof(ComponentTestEntity), id4, "Comp1")).ConfigureAwait(false))
				.ExtractRevisionNumbersFromRevision()
				.Should().Have.SameSequenceAs(2, 3);

			(await (QueryForPropertyHasNotChangedWithDeletedAsync(typeof(ComponentTestEntity), id4, "Comp1")).ConfigureAwait(false))
				.ExtractRevisionNumbersFromRevision()
				.Should().Have.SameSequenceAs(1);
		}
	}
}