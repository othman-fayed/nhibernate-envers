//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Envers.Tests.Entities;
using NHibernate.Envers.Tests.Entities.RevEntity;
using NUnit.Framework;

namespace NHibernate.Envers.Tests.Integration.RevEntity
{
	using System.Threading.Tasks;
	public partial class CustomNoListenerTest : TestBase
	{

		[Test]
		public async Task VerifyRevisionCountsAsync()
		{
			CollectionAssert.AreEquivalent(new[]{1,2,4}, await (AuditReader().GetRevisionsAsync(typeof(StrTestEntity), id)).ConfigureAwait(false));
		}

		[Test]
		public async Task VerifyHistoryOfIdAsync()
		{
			var ver1 = new StrTestEntity {Id = id, Str = "x"};
			var ver2 = new StrTestEntity {Id = id, Str = "y"};
			var ver3 = new StrTestEntity {Id = id, Str = "z"};

			Assert.AreEqual(ver1, await (AuditReader().FindAsync<StrTestEntity>(id, 1)).ConfigureAwait(false));
			Assert.AreEqual(ver2, await (AuditReader().FindAsync<StrTestEntity>(id, 2)).ConfigureAwait(false));
			Assert.AreEqual(ver2, await (AuditReader().FindAsync<StrTestEntity>(id, 3)).ConfigureAwait(false));
			Assert.AreEqual(ver3, await (AuditReader().FindAsync<StrTestEntity>(id, 4)).ConfigureAwait(false));
		}
	}
}