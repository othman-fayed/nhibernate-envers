//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Cfg;
using NHibernate.Envers.Configuration;
using NHibernate.Envers.Tests.Entities;
using NUnit.Framework;
using SharpTestsEx;

namespace NHibernate.Envers.Tests.Integration.RevEntity.TrackModifiedEntities
{
	using System.Threading.Tasks;
	public partial class TrackingEntitiesMultipleChangesTest : TestBase
	{

		[Test]
		public async Task ShouldTrackAddedTwoEntitiesAsync()
		{
			var ste1 = new StrTestEntity { Str = "x", Id = steId1 };
			var ste2 = new StrTestEntity { Str = "y", Id = steId2 };

			(await (crossTypeRevisionChangesReader().FindEntitiesAsync(1)).ConfigureAwait(false))
				.Should().Have.SameValuesAs(ste1, ste2);
		}

		[Test]
		public async Task ShouldTrackUpdateAndRemoveDifferentEntitiesAsync()
		{
			var ste1 = new StrTestEntity { Str = "z", Id = steId1 };
			var ste2 = new StrTestEntity { Id = steId2 };

			(await (crossTypeRevisionChangesReader().FindEntitiesAsync(2)).ConfigureAwait(false))
				.Should().Have.SameValuesAs(ste1, ste2);
		}

		[Test]
		public async Task ShouldTrackUpdateAndRemoveTheSameEntityAsync()
		{
			var ste1 = new StrTestEntity { Id = steId1 };

			(await (crossTypeRevisionChangesReader().FindEntitiesAsync(3)).ConfigureAwait(false))
				.Should().Have.SameValuesAs(ste1);
		}
	}
}