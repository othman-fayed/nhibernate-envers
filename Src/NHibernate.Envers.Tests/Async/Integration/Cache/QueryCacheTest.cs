//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Envers.Tests.Entities;
using NUnit.Framework;

namespace NHibernate.Envers.Tests.Integration.Cache
{
	using System.Threading.Tasks;
	public partial class QueryCacheTest : TestBase
	{

		[Test]
		public async Task VerifyCacheFindAfterRevisionOfEntityQueryAsync()
		{
			var entsFromQuery = await (AuditReader().CreateQuery()
				.ForRevisionsOfEntity(typeof (IntTestEntity), true, false)
				.GetResultListAsync()).ConfigureAwait(false);

			var entFromFindRev1 = await (AuditReader().FindAsync<IntTestEntity>(id1, 1)).ConfigureAwait(false);
			var entFromFindRev2 = await (AuditReader().FindAsync<IntTestEntity>(id1, 2)).ConfigureAwait(false);

			Assert.AreSame(entFromFindRev1, entsFromQuery[0]);
			Assert.AreSame(entFromFindRev2, entsFromQuery[1]);
		}

		[Test]
		public async Task VerifyCacheFindAfterEntitiesAtRevisionQueryAsync()
		{
			var entFromQuery = (IntTestEntity) await (AuditReader().CreateQuery()
			                                   	.ForEntitiesAtRevision(typeof (IntTestEntity), 1)
			                                   	.GetSingleResultAsync()).ConfigureAwait(false);
			var entFromFind = await (AuditReader().FindAsync<IntTestEntity>(id1, 1)).ConfigureAwait(false);
			Assert.AreSame(entFromFind, entFromQuery);
		}
	}
}