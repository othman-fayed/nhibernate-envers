//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Envers.Tests.Integration.OneToOne.BiDirectional;
using NUnit.Framework;

namespace NHibernate.Envers.Tests.Integration.Cache
{
	using System.Threading.Tasks;
	public partial class OneToOneCacheTest : TestBase
	{

		[Test]
		public async Task VerifyCacheReferenceAccessAfterFindRev1Async() 
		{
			var ed1_rev1 = await (AuditReader().FindAsync<BiRefEdEntity>(ed1_id, 1)).ConfigureAwait(false);
			var ing1_rev1 = await (AuditReader().FindAsync<BiRefIngEntity>(ing1_id, 1)).ConfigureAwait(false);

			Assert.AreSame(ing1_rev1.Reference, ed1_rev1);
		}

		[Test]
		public async Task VerifyCacheReferenceAccessAfterFindRev2Async()
		{
			var ed2_rev2 = await (AuditReader().FindAsync<BiRefEdEntity>(ed2_id, 2)).ConfigureAwait(false);
			var ing1_rev2 = await (AuditReader().FindAsync<BiRefIngEntity>(ing1_id, 2)).ConfigureAwait(false);

			Assert.AreSame(ing1_rev2.Reference, ed2_rev2);
		}
	}
}
