//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Envers.Query;
using NHibernate.Envers.Tests.Entities;
using NHibernate.Envers.Tests.Entities.Ids;
using NHibernate.Envers.Tests.Entities.OneToMany;
using NHibernate.Envers.Tests.Entities.OneToMany.Ids;
using NUnit.Framework;
using SharpTestsEx;

namespace NHibernate.Envers.Tests.Integration.Query
{
	using System.Threading.Tasks;
	public partial class NullPropertyQueryTest : TestBase
	{

		[Test]
		public async Task SimplePropertyIsNullQueryAsync()
		{
			var ver = await (AuditReader().CreateQuery()
				.ForEntitiesAtRevision<StrIntTestEntity>(1)
				.Add(AuditEntity.Property("Str").IsNull())
				.SingleAsync()).ConfigureAwait(false);
			ver.Should().Be.EqualTo(new StrIntTestEntity {Id = idSimplePropertyNull, Number = 1, Str = null});
		}

		[Test]
		public async Task SimplePropertyIsNotNullQueryAsync()
		{
			var ver = await (AuditReader().CreateQuery()
				.ForEntitiesAtRevision<StrIntTestEntity>(1)
				.Add(AuditEntity.Property("Str").IsNotNull())
				.SingleAsync()).ConfigureAwait(false);
			ver.Should().Be.EqualTo(new StrIntTestEntity { Id = idSimplePropertyNotNull, Number = 2, Str = "data" });
		}

		[Test]
		public async Task ReferenceMulticolumnPropertyIsNullQueryAsync()
		{
			var ver = await (AuditReader().CreateQuery()
				.ForEntitiesAtRevision<SetRefIngEmbIdEntity>(2)
				.Add(AuditEntity.Property("Reference").IsNull())
				.SingleAsync()).ConfigureAwait(false);
			ver.Id.Should().Be.EqualTo(idMulticolumnReferenceToParentNull);
		}

		[Test]
		public async Task ReferencePropertyIsNotNullQueryAsync()
		{
			var ver = await (AuditReader().CreateQuery()
				.ForEntitiesAtRevision<CollectionRefIngEntity>(3)
				.Add(AuditEntity.Property("Reference").IsNotNull())
				.SingleAsync()).ConfigureAwait(false);
			ver.Id.Should().Be.EqualTo(idReferenceToParentNotNull);
		}
	}
}