//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Envers.Tests.Entities.CustomType;
using NUnit.Framework;

namespace NHibernate.Envers.Tests.Integration.CustomType
{
	using System.Threading.Tasks;
	public partial class CompositeCustomTest : TestBase
	{

		[Test]
		public async Task VerifyRevisionCountAsync()
		{
			CollectionAssert.AreEquivalent(new[] { 1, 2, 3 }, await (AuditReader().GetRevisionsAsync(typeof(CompositeCustomTypeEntity), ccte_id)).ConfigureAwait(false));
		}

		[Test]
		public async Task VerifyHistoryOfCccteAsync()
		{
			var rev1 = await (AuditReader().FindAsync<CompositeCustomTypeEntity>(ccte_id, 1)).ConfigureAwait(false);
			var rev2 = await (AuditReader().FindAsync<CompositeCustomTypeEntity>(ccte_id, 2)).ConfigureAwait(false);
			var rev3 = await (AuditReader().FindAsync<CompositeCustomTypeEntity>(ccte_id, 3)).ConfigureAwait(false);

			Assert.AreEqual(rev1.Component, new Component {Prop1 = "a", Prop2 = 1});
			Assert.AreEqual(rev2.Component, new Component {Prop1 = "b", Prop2 = 1});
			Assert.AreEqual(rev3.Component, new Component {Prop1 = "c", Prop2 = 3});
		}
	}
}