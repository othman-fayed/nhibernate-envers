//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Linq;
using NUnit.Framework;

namespace NHibernate.Envers.Tests.Integration.Generated
{
	using System.Threading.Tasks;
	public partial class GeneratedColumnTest : TestBase
	{

		[Test]
		public async Task GetRevisionCountsAsync()
		{
			Assert.AreEqual(3, (await (AuditReader().GetRevisionsAsync(typeof(SimpleEntity), entityId)).ConfigureAwait(false)).Count());
		}

		[Test]
		public async Task TestRevisionHistoryAsync()
		{
			// revision - insertion
			SimpleEntity rev1 = await (AuditReader().FindAsync<SimpleEntity>(entityId, 1)).ConfigureAwait(false);
			Assert.AreEqual("data", rev1.Data);
			Assert.AreEqual(1, rev1.CaseNumberInsert);

			// revision - update
			SimpleEntity rev2 = await (AuditReader().FindAsync<SimpleEntity>(entityId, 2)).ConfigureAwait(false);
			Assert.AreEqual("data2", rev2.Data);
			Assert.AreEqual(1, rev2.CaseNumberInsert);

			// revision - deletion
			SimpleEntity rev3 = await (AuditReader().FindAsync<SimpleEntity>(entityId, 3)).ConfigureAwait(false);
			Assert.AreEqual("data2", rev2.Data);
			Assert.AreEqual(1, rev2.CaseNumberInsert);
		}
	}
}