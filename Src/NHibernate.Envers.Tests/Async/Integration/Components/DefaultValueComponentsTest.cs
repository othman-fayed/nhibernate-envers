//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Envers.Tests.Entities.Components;
using NUnit.Framework;
using SharpTestsEx;

namespace NHibernate.Envers.Tests.Integration.Components
{
	using System.Threading.Tasks;
	public partial class DefaultValueComponentsTest : TestBase
	{

		[Test]
		public async Task VerifyRevisionCountsAsync()
		{
			(await (AuditReader().GetRevisionsAsync(typeof (DefaultValueComponentTestEntity), id0)).ConfigureAwait(false)).Should().Have.SameSequenceAs(1, 2);
			(await (AuditReader().GetRevisionsAsync(typeof (DefaultValueComponentTestEntity), id1)).ConfigureAwait(false)).Should().Have.SameSequenceAs(1, 2);
			(await (AuditReader().GetRevisionsAsync(typeof (DefaultValueComponentTestEntity), id2)).ConfigureAwait(false)).Should().Have.SameSequenceAs(1, 2);
			(await (AuditReader().GetRevisionsAsync(typeof (DefaultValueComponentTestEntity), id3)).ConfigureAwait(false)).Should().Have.SameSequenceAs(1, 2);
			(await (AuditReader().GetRevisionsAsync(typeof (DefaultValueComponentTestEntity), id4)).ConfigureAwait(false)).Should().Have.SameSequenceAs(1, 2);
			(await (AuditReader().GetRevisionsAsync(typeof (DefaultValueComponentTestEntity), id5)).ConfigureAwait(false)).Should().Have.SameSequenceAs(1, 2);
			(await (AuditReader().GetRevisionsAsync(typeof (DefaultValueComponentTestEntity), id6)).ConfigureAwait(false)).Should().Have.SameSequenceAs(1, 2);
		}

		[Test]
		public async Task VerifyHistoryOfId0Async()
		{
			var ent1 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id0, 1)).ConfigureAwait(false);
			var ent2 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id0, 2)).ConfigureAwait(false);
			var expectedVer1 = new DefaultValueComponentTestEntity {Id = id0, Comp1 = new DefaultValueComponent1{Str1 = null, Comp2 = null}};
			var expectedVer2 = new DefaultValueComponentTestEntity { Id = id0, Comp1 = new DefaultValueComponent1 { Str1 = "upd-c1-str1", Comp2 = null } };
			ent1.Should().Be.EqualTo(expectedVer1);
			ent2.Should().Be.EqualTo(expectedVer2);
		}

		[Test]
		public async Task VerifyHistoryOfId1Async()
		{
			var ent1 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id1, 1)).ConfigureAwait(false);
			var ent2 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id1, 2)).ConfigureAwait(false);
			var expectedVer1 = new DefaultValueComponentTestEntity { Id = id1, Comp1 = new DefaultValueComponent1 { Str1 = "c1-str1", Comp2 = null } };
			var expectedVer2 = new DefaultValueComponentTestEntity { Id = id1, Comp1 = new DefaultValueComponent1 { Str1 = null, Comp2 = new DefaultValueComponent2 { Str1 = "upd-c2-str1", Str2 = "upd-c2-str2" } } };
			ent1.Should().Be.EqualTo(expectedVer1);
			ent2.Should().Be.EqualTo(expectedVer2);
		}

		[Test]
		public async Task VerifyHistoryOfId2Async()
		{
			var ent1 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id2, 1)).ConfigureAwait(false);
			var ent2 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id2, 2)).ConfigureAwait(false);
			var expectedVer1 = new DefaultValueComponentTestEntity { Id = id2, Comp1 = new DefaultValueComponent1 { Str1 = "c1-str1", Comp2 = new DefaultValueComponent2 { Str1 = "c2-str1", Str2 = "c2-str2" } } };
			var expectedVer2 = new DefaultValueComponentTestEntity { Id = id2, Comp1 = new DefaultValueComponent1 { Str1 = "c1-str1", Comp2 = new DefaultValueComponent2 { Str1 = "upd-c2-str1", Str2 = "c2-str2" } } };
			ent1.Should().Be.EqualTo(expectedVer1);
			ent2.Should().Be.EqualTo(expectedVer2);
		}

		[Test]
		public async Task VerifyHistoryOfId3Async()
		{
			var ent1 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id3, 1)).ConfigureAwait(false);
			var ent2 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id3, 2)).ConfigureAwait(false);
			var expectedVer1 = new DefaultValueComponentTestEntity { Id = id3, Comp1 = new DefaultValueComponent1 { Str1 = null, Comp2 = new DefaultValueComponent2 { Str1 = "c2-str1", Str2 = "c2-str2" } } };
			var expectedVer2 = new DefaultValueComponentTestEntity { Id = id3, Comp1 = new DefaultValueComponent1 { Str1 = null, Comp2 = new DefaultValueComponent2 { Str1 = "upd-c2-str1", Str2 = "c2-str2" } } };
			ent1.Should().Be.EqualTo(expectedVer1);
			ent2.Should().Be.EqualTo(expectedVer2);
		}

		[Test]
		public async Task VerifyHistoryOfId4Async()
		{
			var ent1 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id4, 1)).ConfigureAwait(false);
			var ent2 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id4, 2)).ConfigureAwait(false);
			var expectedVer1 = new DefaultValueComponentTestEntity { Id = id4, Comp1 = new DefaultValueComponent1 { Str1 = null, Comp2 = new DefaultValueComponent2 { Str1 = null, Str2 = "c2-str2" } } };
			var expectedVer2 = new DefaultValueComponentTestEntity { Id = id4, Comp1 = new DefaultValueComponent1 { Str1 = null, Comp2 = new DefaultValueComponent2 { Str1 = "upd-c2-str1", Str2 = "c2-str2" } } };
			ent1.Should().Be.EqualTo(expectedVer1);
			ent2.Should().Be.EqualTo(expectedVer2);
		}

		[Test]
		public async Task VerifyHistoryOfId5Async()
		{
			var ent1 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id5, 1)).ConfigureAwait(false);
			var ent2 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id5, 2)).ConfigureAwait(false);
			var expectedVer1 = new DefaultValueComponentTestEntity { Id = id5, Comp1 = new DefaultValueComponent1 { Str1 = null, Comp2 = new DefaultValueComponent2 { Str1 = "c2-str1", Str2 = null } } };
			var expectedVer2 = new DefaultValueComponentTestEntity { Id = id5, Comp1 = new DefaultValueComponent1 { Str1 = null, Comp2 = new DefaultValueComponent2 { Str1 = "upd-c2-str1", Str2 = null } } };
			ent1.Should().Be.EqualTo(expectedVer1);
			ent2.Should().Be.EqualTo(expectedVer2);
		}

		[Test]
		public async Task VerifyHistoryOfId6Async()
		{
			var ent1 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id6, 1)).ConfigureAwait(false);
			var ent2 = await (AuditReader().FindAsync<DefaultValueComponentTestEntity>(id6, 2)).ConfigureAwait(false);
			var expectedVer1 = new DefaultValueComponentTestEntity { Id = id6, Comp1 = new DefaultValueComponent1 { Str1 = null, Comp2 = null } };
			var expectedVer2 = new DefaultValueComponentTestEntity { Id = id6, Comp1 = new DefaultValueComponent1 { Str1 = null, Comp2 = new DefaultValueComponent2 { Str1 = "upd-c2-str1", Str2 = null } } };
			ent1.Should().Be.EqualTo(expectedVer1);
			ent2.Should().Be.EqualTo(expectedVer2);
		}
	}
}