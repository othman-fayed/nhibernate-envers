//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Envers.Tests.Entities;
using NHibernate.Envers.Tests.Entities.Components.Relations;
using NUnit.Framework;

namespace NHibernate.Envers.Tests.Integration.Components.Relations
{
	using System.Threading.Tasks;
	public partial class NotAuditedManyToOneInComponentTest : TestBase
	{

		[Test]
		public async Task VerifyRevisionCountsAsync()
		{
			CollectionAssert.AreEqual(new[] { 1, 2 }, await (AuditReader().GetRevisionsAsync(typeof(NotAuditedManyToOneComponentTestEntity), mtocte_id1)).ConfigureAwait(false));
		}

		[Test]
		public async Task VerifyHistoryAsync()
		{
			var ver1 = new NotAuditedManyToOneComponentTestEntity
			           	{Id = mtocte_id1, Comp1 = new NotAuditedManyToOneComponent {Data = "data1"}};
			var ver2 = new NotAuditedManyToOneComponentTestEntity
			           	{Id = mtocte_id1, Comp1 = new NotAuditedManyToOneComponent {Data = "data2"}};

			Assert.AreEqual(ver1, await (AuditReader().FindAsync<NotAuditedManyToOneComponentTestEntity>(mtocte_id1, 1)).ConfigureAwait(false));
			Assert.AreEqual(ver2, await (AuditReader().FindAsync<NotAuditedManyToOneComponentTestEntity>(mtocte_id1, 2)).ConfigureAwait(false));
		}
	}
}