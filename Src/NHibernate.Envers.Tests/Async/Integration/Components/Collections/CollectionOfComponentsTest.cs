//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;
using NHibernate.Envers.Tests.Entities.Components;
using NUnit.Framework;
using SharpTestsEx;

namespace NHibernate.Envers.Tests.Integration.Components.Collections
{
	using System.Threading.Tasks;
	public partial class CollectionOfComponentsTest : TestBase
	{

		[Test]
		public async Task VerifyRevisionCountsAsync()
		{
			CollectionAssert.AreEqual(new[] { 1, 2 }, await (AuditReader().GetRevisionsAsync(typeof(ComponentSetTestEntity), id1)).ConfigureAwait(false));
		}

		[Test]
		public async Task VerifyHistoryOf1Async()
		{
			CollectionAssert.IsEmpty((await (AuditReader().FindAsync<ComponentSetTestEntity>(id1, 1)).ConfigureAwait(false)).Comps);

			var comps1 = (await (AuditReader().FindAsync<ComponentSetTestEntity>(id1, 2)).ConfigureAwait(false)).Comps;
			Assert.AreEqual(1, comps1.Count);
			CollectionAssert.Contains(comps1, new Component1 { Str1 = "a", Str2 = "b" });
		}

		[Test]
		public async Task VerifyCollectionOfEmbeddableWithNullValueAsync()
		{
			var componentV1 = new Component1 {Str1 = "string1", Str2 = null};
			var entityV1 = await (AuditReader().FindAsync<ComponentSetTestEntity>(id2, 1)).ConfigureAwait(false);

			entityV1.Comps.Should().Have.SameSequenceAs(componentV1);
		}
	}
}