//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;

namespace NHibernate.Envers.Tests.Integration.Interfaces.Components
{
	using System.Threading.Tasks;
	public partial class InterfacesComponentsTest : TestBase
	{

		[Test]
		public async Task VerifyRevisionCountAsync()
		{
			CollectionAssert.AreEquivalent(new[] { 1, 2, 3 }, await (AuditReader().GetRevisionsAsync(typeof(ComponentTestEntity), id1)).ConfigureAwait(false));
		}

		[Test]
		public async Task VerifyHistoryAsync()
		{
			var ver1 = new ComponentTestEntity { Id = id1, Comp1 = new Component1 { Data = "a" } };
			var ver2 = new ComponentTestEntity { Id = id1, Comp1 = new Component1 { Data = "b" } };
			var ver3 = new ComponentTestEntity { Id = id1, Comp1 = new Component1 { Data = "c" } };

			Assert.AreEqual(ver1, await (AuditReader().FindAsync<ComponentTestEntity>(id1, 1)).ConfigureAwait(false));
			Assert.AreEqual(ver2, await (AuditReader().FindAsync<ComponentTestEntity>(id1, 2)).ConfigureAwait(false));
			Assert.AreEqual(ver3, await (AuditReader().FindAsync<ComponentTestEntity>(id1, 3)).ConfigureAwait(false));
		}
	}
}