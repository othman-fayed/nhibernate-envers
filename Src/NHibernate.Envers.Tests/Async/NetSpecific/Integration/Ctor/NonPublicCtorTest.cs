//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;
using SharpTestsEx;

namespace NHibernate.Envers.Tests.NetSpecific.Integration.Ctor
{
	using System.Threading.Tasks;
	public partial class NonPublicCtorTest : TestBase
	{

		[Test]
		public async Task VerifyRevisionCountAsync()
		{
			CollectionAssert.AreEquivalent(new[] { 1, 2 }, await (AuditReader().GetRevisionsAsync(typeof(NonPublicCtorEntity),id)).ConfigureAwait(false));
		}

		[Test]
		public async Task VerifyHistoryOfRefComponentAsync()
		{
			(await (AuditReader().FindAsync<NonPublicCtorEntity>(id, 1)).ConfigureAwait(false)).Component.Name
				.Should().Be.EqualTo("first");
			(await (AuditReader().FindAsync<NonPublicCtorEntity>(id, 2)).ConfigureAwait(false)).Component.Name
				.Should().Be.EqualTo("second");
		}

		[Test]
		public async Task VerifyHistoryOfStructComponentAsync()
		{
			(await (AuditReader().FindAsync<NonPublicCtorEntity>(id, 1)).ConfigureAwait(false)).StructComponent.Value
				.Should().Be.EqualTo(1);
			(await (AuditReader().FindAsync<NonPublicCtorEntity>(id, 2)).ConfigureAwait(false)).StructComponent.Value
				.Should().Be.EqualTo(2);
		}
	}
}