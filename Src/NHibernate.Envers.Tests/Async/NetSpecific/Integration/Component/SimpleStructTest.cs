//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;

namespace NHibernate.Envers.Tests.NetSpecific.Integration.Component
{
	using System.Threading.Tasks;
	public partial class SimpleStructTest : TestBase
	{

		[Test]
		public async Task VerifyRevisionCountsAsync()
		{
			CollectionAssert.AreEqual(new[] {1, 2, 3}, await (AuditReader().GetRevisionsAsync(typeof(ComponentOwner),id)).ConfigureAwait(false));
		}

		[Test]
		public async Task VerifyHistoryOfComponentAsync()
		{
			var ver1 = new StructComponent();
			var ver2 = new StructComponent { Data1 = "1", NestedComponent = new StructComponent2 { Data2 = 1 } };
			var ver3 = new StructComponent { Data1 = "2", NestedComponent = new StructComponent2 { Data2 = 2 } };


			Assert.AreEqual(ver1, (await (AuditReader().FindAsync<ComponentOwner>(id, 1)).ConfigureAwait(false)).Component);
			Assert.AreEqual(ver2, (await (AuditReader().FindAsync<ComponentOwner>(id, 2)).ConfigureAwait(false)).Component);
			Assert.AreEqual(ver3, (await (AuditReader().FindAsync<ComponentOwner>(id, 3)).ConfigureAwait(false)).Component);
		}
	}
}