//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;

namespace NHibernate.Envers.Tests.NetSpecific.Integration.Strategy.SetOfValues
{
	using System.Threading.Tasks;
	public partial class SetOfValuesTest : ValidityTestBase
	{

		[Test]
		public async Task SameValueCanBeAddedToAndThenRemovedFromTheColectionMoreThanOnceAsync()
		{
			// Remove value that has been removed and then added back before
			using (var tx = Session.BeginTransaction())
			{
				var c = await (Session.GetAsync<SetOfValuesTestEntity>(id)).ConfigureAwait(false);
				c.ChildValues.Remove("v");
				await (tx.CommitAsync()).ConfigureAwait(false);
			}
			Assert.Pass("Value successfuly removed");
		}
	}
}