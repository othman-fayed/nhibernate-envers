//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NUnit.Framework;
using SharpTestsEx;

namespace NHibernate.Envers.Tests.NetSpecific.Integration.InsertUpdateFalse
{
	using System.Threading.Tasks;
	public partial class InsertUpdateFalseComponentTest : TestBase
	{

		[Test]
		public async Task VerifyRevisionCountAsync()
		{
			CollectionAssert.AreEquivalent(new[] { 1, 2 }, await (AuditReader().GetRevisionsAsync(typeof(ParentEntity),id)).ConfigureAwait(false));
		}

		[Test]
		public async Task VerifyHistoryAsync()
		{
			var expected1 = new ParentEntity
			                	{
			                		Id = id,
			                		Component = new ChildComponent {NoUpdateInsert = 0},
			                		ComponentSetter = new ChildComponent {NoUpdateInsert = 0}
			                	};
			var expected2 = new ParentEntity
			                	{
			                		Id = id,
			                		Component = new ChildComponent {NoUpdateInsert = 3},
			                		ComponentSetter = new ChildComponent {NoUpdateInsert = 3}
			                	};

			var ver1 = await (AuditReader().FindAsync<ParentEntity>(id, 1)).ConfigureAwait(false);
			var ver2 = await (AuditReader().FindAsync<ParentEntity>(id, 2)).ConfigureAwait(false);

			ver1.Should().Be.EqualTo(expected1);
			ver2.Should().Be.EqualTo(expected2);
		}
	}
}