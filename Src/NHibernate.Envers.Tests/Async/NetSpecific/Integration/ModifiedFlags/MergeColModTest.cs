//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using NHibernate.Cfg;
using NHibernate.Envers.Configuration;
using NHibernate.Envers.Query;
using NUnit.Framework;

namespace NHibernate.Envers.Tests.NetSpecific.Integration.ModifiedFlags
{
	using System.Threading.Tasks;
	public partial class MergeColModTest : TestBase
	{

		[Test]
		public async Task CheckHistoryAsync()
		{
			var changedRevisions = await (AuditReader().CreateQuery()
				.ForHistoryOf<Casee, DefaultRevisionEntity>()
				.Add(AuditEntity.Property("CaseTags").HasChanged())
				.ResultsAsync()).ConfigureAwait(false);
			//rev 2 and rev 4 are the revisions where we remove the tag from the case, thus both revisions should have the casetag property marked as being changed
			Assert.IsTrue(changedRevisions.Count(x => x.RevisionEntity.Id == 2 || x.RevisionEntity.Id == 4) == 2);
		}

	}
}
