//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NHibernate.Envers.Configuration;
using NHibernate.Envers.Entities.Mapper.Relation.Query;
using NHibernate.Envers.Reader;

namespace NHibernate.Envers.Entities.Mapper.Relation.Lazy.Initializor
{
	using System.Threading.Tasks;
	using System.Threading;
	public abstract partial class AbstractCollectionInitializor<T> : IInitializor
	{

		public async Task<object> InitializeAsync(CancellationToken cancellationToken = default(CancellationToken)) 
		{
			cancellationToken.ThrowIfCancellationRequested();
			var collectionContent = await (_queryGenerator.GetQuery(_versionsReader, _primaryKey, Revision, _removed).ListAsync(cancellationToken)).ConfigureAwait(false);
			var collection = InitializeCollection(collectionContent.Count);
			foreach (var collectionRow in collectionContent) 
			{
				AddToCollection(collection, collectionRow);
			}
			return collection;
		}
	}
}
