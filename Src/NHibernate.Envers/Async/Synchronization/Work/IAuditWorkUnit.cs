//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Collections.Generic;

namespace NHibernate.Envers.Synchronization.Work
{
	using System.Threading.Tasks;
	using System.Threading;
	public partial interface IAuditWorkUnit: IWorkUnitMergeVisitor, IWorkUnitMergeDispatcher 
	{

		/// <summary>
		/// Perform this work unit in the given session.
		/// </summary>
		/// <param name="session">Session, in which the work unit should be performed.</param>
		/// <param name="revisionData">
		/// The current revision data, which will be used to populate the work unit with the correct revision relation.
		/// </param>
		/// <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
		Task PerformAsync(ISession session, object revisionData, CancellationToken cancellationToken = default(CancellationToken));

		Task UndoAsync(ISession session, CancellationToken cancellationToken = default(CancellationToken));
	}
}
